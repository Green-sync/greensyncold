"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[218],{4852:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(9231);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5856:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(5675),o=(n(9231),n(4852));const i={title:"Server Application",sidebar_position:3},a=void 0,l={unversionedId:"server",id:"server",title:"Server Application",description:"Introduction",source:"@site/docs/server.md",sourceDirName:".",slug:"/server",permalink:"/docs/server",draft:!1,editUrl:"https://github.com/green-sync/greensync/docs/server.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Server Application",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Client Application",permalink:"/docs/client"},next:{title:"Documentation",permalink:"/docs/docs"}},c={},p=[{value:"Introduction",id:"introduction",level:2}],s={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Welcome to our project! Our project is a serverless GraphQL API built on top of Firebase Functions using the popular Apollo Server library. The API provides a flexible data model and a set of powerful features that enable clients to interact with the data in meaningful ways."),(0,o.kt)("p",null,"We have organized our project in a clean and orderly manner, utilizing a high-level folder structure that separates our code into logical groups:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\u251c\u2500\u2500 firebase.json\n\u251c\u2500\u2500 index.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 pnpm-lock.yaml\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 resolvers.js\n\u2502   \u251c\u2500\u2500 schema.js\n\u2502   \u2514\u2500\u2500 utils\n\u2502       \u2514\u2500\u2500 config.js\n\u2514\u2500\u2500 tree.md\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"firebase.json")," : Configuration file for Firebase services"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"index.js")," : Entry point for the serverless application"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"package.json")," : Dependency file for Node.js packages"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pnpm-lock.yaml")," : Lock file for pnpm , our package manager of choice"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"src")," : Directory for our source code, containing:"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"resolvers"),".js : Implementations for the GraphQL resolvers"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"schema.js")," : The GraphQL schema definition"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"utils")," : A set of utility functions to support the application, containing:"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"config.js")," : A configuration module for environment variables.")),(0,o.kt)("p",null,"Our project is documented in a structured manner, using the tree.md file to represent the high-level folder structure of our project. We believe that clean and organized code, along with comprehensive documentation, is key to building a robust and scalable application."),(0,o.kt)("p",null,"Thank you for choosing our project and we hope that you enjoy working with it!"))}d.isMDXComponent=!0}}]);